{
  "name": "pricing-one",
  "type": "registry:block",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "blocks/pricing-one.tsx",
      "content": "import { Check, Minus, MoveRight } from \"lucide-react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion } from \"framer-motion\";\n\ninterface Feature {\n  name: string;\n  tiers: (boolean | string)[];\n}\n\ninterface Plan {\n  name: string;\n  price: string;\n  description: string;\n  features: Feature[];\n  isPrimary: boolean;\n  ctaLabel: string;\n  ctaLink: string;\n}\n\nexport default function PricingComponent() {\n  const plans: Plan[] = [\n    {\n      name: \"Starter\",\n      price: \"Free\",\n      description: \"Get started with essential features for small projects.\",\n      features: [\n        { name: \"Supabase Integration\", tiers: [true, true, true] },\n        { name: \"Stripe Checkout\", tiers: [true, true, true] },\n        { name: \"Custom Email Templates\", tiers: [false, true, true] },\n        { name: \"24/7 Support\", tiers: [false, false, true] },\n      ],\n      isPrimary: false,\n      ctaLabel: \"Learn More\",\n      ctaLink: \"#\",\n    },\n    {\n      name: \"Pro\",\n      price: \"$19\",\n      description: \"Advanced tools for growing businesses and teams.\",\n      features: [\n        { name: \"Supabase Integration\", tiers: [true, true, true] },\n        { name: \"Stripe Checkout\", tiers: [true, true, true] },\n        { name: \"Custom Email Templates\", tiers: [true, true, true] },\n        { name: \"24/7 Support\", tiers: [false, true, true] },\n      ],\n      isPrimary: true,\n      ctaLabel: \"Get Started\",\n      ctaLink: \"#\",\n    },\n    {\n      name: \"Enterprise\",\n      price: \"Contact Us\",\n      description: \"Custom solutions for enterprise-grade applications.\",\n      features: [\n        { name: \"Supabase Integration\", tiers: [true, true, true] },\n        { name: \"Stripe Checkout\", tiers: [true, true, true] },\n        { name: \"Custom Email Templates\", tiers: [true, true, true] },\n        { name: \"24/7 Support\", tiers: [true, true, true] },\n      ],\n      isPrimary: false,\n      ctaLabel: \"Contact Sales\",\n      ctaLink: \"#\",\n    },\n  ];\n\n  return (\n    <div className=\"w-full py-10 md:py-20\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col items-center justify-center gap-4 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Badge>Launch Your Product</Badge>\n          </motion.div>\n          <motion.h2\n            className=\"font-regular max-w-xl text-center text-3xl tracking-tighter md:text-5xl lg:text-7xl\"\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n          >\n            No credit card required\n          </motion.h2>\n          <motion.p\n            className=\"max-w-xl text-center text-base leading-relaxed tracking-tight text-gray-400 md:text-lg\"\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.4 }}\n          >\n            Launch smarter, faster, and better with pre-integrated tools like\n            Supabase, Stripe, Resend, and Framer Motion. Emerald empowers your\n            SaaS journey with a modern, scalable architecture.\n          </motion.p>\n        </div>\n        <motion.div\n          className=\"mt-10 md:mt-20\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5, delay: 0.6 }}\n        >\n          <div className=\"md:hidden\">\n            {plans.map((plan, index) => (\n              <div key={index} className=\"mb-8 rounded-lg border p-6\">\n                <h3 className=\"text-2xl font-bold\">{plan.name}</h3>\n                <p className=\"mt-2 text-sm text-gray-400\">{plan.description}</p>\n                <div className=\"mt-4 flex items-baseline\">\n                  <span className=\"text-4xl font-bold\">{plan.price}</span>\n                  <span className=\"ml-2 text-sm text-gray-400\">\n                    {plan.price === \"Contact Us\" ? \"\" : \"/ month\"}\n                  </span>\n                </div>\n                <a href={plan.ctaLink}>\n                  <Button\n                    variant={plan.isPrimary ? \"default\" : \"outline\"}\n                    className=\"mt-6 w-full justify-center gap-2 bg-white text-black hover:bg-gray-200\"\n                  >\n                    {plan.ctaLabel} <MoveRight className=\"h-4 w-4\" />\n                  </Button>\n                </a>\n                <div className=\"mt-6\">\n                  <h4 className=\"mb-2 font-semibold\">Features:</h4>\n                  <ul className=\"space-y-2\">\n                    {plan.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\">\n                        {typeof feature.tiers[index] === \"boolean\" ? (\n                          feature.tiers[index] ? (\n                            <Check className=\"mr-2 h-5 w-5 text-green-500\" />\n                          ) : (\n                            <Minus className=\"mr-2 h-5 w-5 text-gray-500\" />\n                          )\n                        ) : (\n                          <Check className=\"mr-2 h-5 w-5 text-green-500\" />\n                        )}\n                        <span className=\"text-sm\">\n                          {feature.name}\n                          {typeof feature.tiers[index] !== \"boolean\" && (\n                            <span className=\"ml-1 text-gray-400\">\n                              ({feature.tiers[index]})\n                            </span>\n                          )}\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"hidden md:block\">\n            <div className=\"grid grid-cols-4 gap-0 divide-x divide-gray-800\">\n              <div />\n              {plans.map((plan, index) => (\n                <div\n                  key={index}\n                  className=\"flex flex-col justify-between gap-4 p-6\"\n                >\n                  <div>\n                    <p className=\"text-2xl font-bold\">{plan.name}</p>\n                    <p className=\"mt-2 h-12 text-sm text-gray-400\">\n                      {plan.description}\n                    </p>\n                    <div className=\"mt-6 flex items-baseline\">\n                      <span className=\"text-4xl font-bold\">{plan.price}</span>\n                      <span className=\"ml-2 text-sm text-gray-400\">\n                        {plan.price === \"Contact Us\" ? \"\" : \"/ month\"}\n                      </span>\n                    </div>\n                  </div>\n                  <a href={plan.ctaLink}>\n                    <Button\n                      variant={plan.isPrimary ? \"default\" : \"outline\"}\n                      className=\"mt-4 w-full justify-center gap-2\"\n                    >\n                      {plan.ctaLabel} <MoveRight className=\"h-4 w-4\" />\n                    </Button>\n                  </a>\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-8 grid grid-cols-4 gap-0 divide-x divide-gray-800\">\n              {plans[0].features.map((feature, featureIndex) => (\n                <>\n                  <div\n                    key={`feature-${featureIndex}`}\n                    className=\"flex items-center p-4 font-medium\"\n                  >\n                    {feature.name}\n                  </div>\n                  {feature.tiers.map((tier, tierIndex) => (\n                    <div\n                      key={`feature-tier-${featureIndex}-${tierIndex}`}\n                      className=\"flex justify-center p-4\"\n                    >\n                      {typeof tier === \"boolean\" ? (\n                        tier ? (\n                          <Check className=\"h-5 w-5 text-green-500\" />\n                        ) : (\n                          <Minus className=\"h-5 w-5 text-gray-500\" />\n                        )\n                      ) : (\n                        <p className=\"text-sm text-gray-400\">{tier}</p>\n                      )}\n                    </div>\n                  ))}\n                </>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:block",
      "target": ""
    }
  ]
}